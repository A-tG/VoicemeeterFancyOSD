<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:VoicemeeterOsdProgram.UiControls">
    
    <Style x:Key="EmptyTglButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TooltipButtonStyle" TargetType="{x:Type ui:TooltipButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:TooltipButton}">
                    <ToggleButton Name="TglBtn" Style="{StaticResource EmptyTglButtonStyle}" 
                                  FocusVisualStyle="{StaticResource VmFocusVisualStyle}"
                                  BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid SnapsToDevicePixels="True">
                                <Ellipse Name="Circle" Width="16" Height="16" Fill="Transparent" 
                                     StrokeThickness="1" Stroke="{StaticResource VmDarkElementBrush}"/>
                                <Path Name="Path" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  StrokeThickness="0" Fill="{StaticResource VmDarkElementBrush}"
                                  Data="M 0 0 h 2 v 2 h -2 Z M 0 3 h 2 v 5 h -2 z"/>
                            </Grid>
                            <ui:PopupExt x:Name="PopupControl"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" StaysOpen="False" PopupAnimation="Scroll"
                                   Placement="Bottom" PlacementTarget="{Binding ElementName=TglBtn}" AllowsTransparency="True"
                                   IsOpen="{Binding IsChecked, ElementName=TglBtn, Mode=TwoWay, Delay=200}">
                                <Border Padding="4" Background="{StaticResource VmBgMainBrush}" CornerRadius="2" 
                                                BorderThickness="1" BorderBrush="{StaticResource VmSepBrush}">
                                    <ContentPresenter TextBlock.Foreground="{StaticResource VmDarkLighterTextBrush}"/>
                                </Border>
                            </ui:PopupExt>
                        </Grid>
                    </ToggleButton>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=TglBtn}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="Stroke" TargetName="Circle" Value="{StaticResource VmActiveElementCyanBrush}"/>
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource VmActiveElementCyanBrush}"/>
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=TglBtn}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="Stroke" TargetName="Circle" Value="{StaticResource VmActiveElementCyanBrush}"/>
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource VmActiveElementCyanBrush}"/>
                            </DataTrigger.Setters>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource self}}" Value="">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource self}}" Value="{x:Null}">
                            <DataTrigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>